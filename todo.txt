Soon:

Support marking attributes (and association fields) not-null.

Support descriptions on attributes.

Spec inverse associations, make sure they do the right thing.

Add Prelay::ID.for().

Sequel associations with defined blocks (supported, need testing).

Cut down on retrieving key columns from the DB when it's not necessary.

Spec introspection query.

Spec custom dependent_columns.

Query and Mutation classes.

Figure out where custom query logic (like full-text search) should live.

Only wrap Query::Base subclasses that are connections.





Pagination:

Encode values and connection orders in cursors. Spec them in fragments.

Support custom orders, and spec that they work with seek pagination.

Support counts on connections. Should respect arguments, and just return
counter caches when available and appropriate (no arguments). How should
counts change when paginating?

Move seek pagination invocation out of DatasetResolver, probably.





Future association work:

Support associated :through, to allow GraphQL queries that skip the
intermediate associations. Should merge into other parts of the query that
query the intermediate association.

Figure out how/whether to optimize to reciprocal associations.

If no columns are requested at an association level (will commonly be the case
when accessing :through associations), try to push that down to the DB as a
join. Maybe do that sometimes when columns are requested anyway.





Future miscellaneous stuff:

Use qualified columns everywhere.

Base types on datasets, in addition to or instead of models?

Support introspecting datatypes from models/datasets.

Support deprecation warnings on fields (and whole objects?).

Freeze schema contents when they're generated.

Support some configurable way to reject queries that have the potential to
touch too many rows or generate queries of too severe complexity.

Give attributes dataset dependencies? Of which dependent_columns would just be
a special case?

Permissions: visibility both for whole rows and individual fields within rows.
May often need to modify queries to retrieve information to determine
visibility.

Add more checks that arguments are present and the right types.

Delete arguments as they're used, make sure there are none left at the end.

Plural identifying root fields:
https://facebook.github.io/relay/graphql/objectidentification.htm#sec-Plural-identifying-root-fields

Instrumentation?

Set loaded associations in model objects? Would only be in certain cases when
we can be sure they're complete.

Spec/support multiple invocations of the same field with different arguments.
